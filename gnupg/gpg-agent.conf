# Time-stamp: <Sun 2023-12-10 10:02 svarrette>
####################################################################################
# ~/.gnupg/gpg-agent.conf - Secret key management for GnuPG configuration
#                                                   _                     __
#     __ _ _ __   __ _        __ _  __ _  ___ _ __ | |_   ___ ___  _ __  / _|
#    / _` | '_ \ / _` |_____ / _` |/ _` |/ _ \ '_ \| __| / __/ _ \| '_ \| |_
#   | (_| | |_) | (_| |_____| (_| | (_| |  __/ | | | |_ | (_| (_) | | | |  _|
#    \__, | .__/ \__, |      \__,_|\__, |\___|_| |_|\__(_)___\___/|_| |_|_|
#    |___/|_|    |___/             |___/
#
# Daemon to manage secret (private) keys independently from any protocol
# The agent is automatically started on demand by gpg, gpgconf, or gpg-connect-agent
# After changing the configuration, reload the agent with
#             gpg-connect-agent reloadagent /bye
#
# In case you want to use the included SSH Agent, you may start the agent using:
#        gpg-connect-agent /bye
#
# If you want to manually terminate the currently-running agent, you can safely
# do so with:
#        gpgconf --kill gpg-agent
#
# Resources:
# - https://github.com/bfrg/gpg-guide/blob/master/gpg-agent.conf
# - https://github.com/drduh/config/blob/master/gpg-agent.conf
# Documentation:
#   https://www.gnupg.org/documentation/manuals/gnupg/Agent-Options.html
####################################################################################

ttyname $GPG_TTY
default-cache-ttl 60
max-cache-ttl 120

# Select PIN entry program (qt, curses, gnome3,...)
# Debian/Ubuntu; select default program with
#     sudo update-alternatives --config pinentry
# pinentry-program /usr/bin/pinentry-curses
# pinentry-program /usr/bin/pinentry-tty
# pinentry-program /usr/bin/pinentry-gtk-2
# pinentry-program /usr/bin/pinentry-x11
# pinentry-program /usr/bin/pinentry-qt
# pinentry-program /usr/local/bin/pinentry-curses
# pinentry-program /usr/local/bin/pinentry-mac
# pinentry-program /opt/homebrew/bin/pinentry-mac

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ Use GnuPG agent for SSH keys (instead of ssh-agent)                       │
# └───────────────────────────────────────────────────────────────────────────┘
# See also https://gist.github.com/artizirk/d09ce3570021b0f65469cb450bee5e29

enable-ssh-support
# Time a SSH cache entry is valid
# default-cache-ttl-ssh 600

#
# Note: Make sure that gpg-agent is always started with login.
#
# This can be done by adding the following to ~/.bashrc or ~/.zshrc:
#   # Start gpg-agent if not already running
#   if ! pgrep -x -u "${USER}" gpg-agent &> /dev/null; then
#        gpg-connect-agent /bye &> /dev/null
#   fi
#
# Additionally add:
#   # Set SSH to use gpg-agent (see 'man gpg-agent', section EXAMPLES)
#   unset SSH_AGENT_PID
#   if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
#       # export SSH_AUTH_SOCK="/run/user/$UID/gnupg/S.gpg-agent.ssh"
#       export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
#   fi
#
#   # Set GPG TTY as stated in 'man gpg-agent'
#   export GPG_TTY=$(tty)
#
#   # Refresh gpg-agent tty in case user switches into an X session
#   gpg-connect-agent updatestartuptty /bye > /dev/null
#
# For more details, see https://wiki.archlinux.org/title/GnuPG#SSH_agent
#
# The above code is provided in gpg-agent.sh you can source in your favorite
# shell config
